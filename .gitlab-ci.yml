image: docker:latest

services:
  - docker:dind

stages:
  - build
  - deploy_train
  - deploy_serve

variables:
  DOCKER_DRIVER: overlay2

before_script:
  - docker info

# Common Clone Job
clone_repo:
  stage: build
  script:
    - git clone <repository-url> /builds/project-0
    - cd /builds/project-0

# Build Job
build_image:
  stage: build
  script:
    - cd /builds/project-0
    - docker build -t my-app:latest -f api/Dockerfile .
    - docker save my-app:latest -o my-app.tar
  artifacts:
    paths:
      - my-app.tar
  dependencies:
    - clone_repo

# Deploy Training Job
deploy_train:
  stage: deploy_train
  dependencies:
    - build_image
  script:
    - docker load -i my-app.tar
    - docker run -d --name training-container my-app:latest python train.py
    - sleep 5 # wait for the container to be up
    - docker ps -a # check if the container is running

# Deploy Serving Job
deploy_serve:
  stage: deploy_serve
  dependencies:
    - build_image
  script:
    - docker load -i my-app.tar
    - docker run -d -p 5000:5000 --name serving-container my-app:latest
    - sleep 5 # wait for the container to be up
    - docker ps -a # check if the container is running

tags:
  - localrunner
  - localshell
